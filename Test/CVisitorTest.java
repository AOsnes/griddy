import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;

import com.company.*;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;

public class CVisitorTest {
    String outHeader = """
            /* === Code generated by Griddy compiler === */
            #include <stdio.h>
            #include <stdlib.h>
            #include <string.h>
            
            int main(int argc, char *argv[]){
            struct Piece { char* name; unsigned int limit; unsigned int count; };
            struct Piece empty_piece;
            empty_piece.name = calloc(7, sizeof(char));
            strcpy(empty_piece.name, " ");
            
            """,
            setupHeader = "/*    SETUP    */\n",
            gameHeader = "/*   GAME    */\n";

    String gameLoop(String body) {
        return """
                int i = 5;
                do {
                """
                + body
                + """
                
                } while (0 < i--);
                """;
    }

    @Test
    void outputString() {
        var input = """
                SETUP
                GAME
                    output "Hello, World!";
                """;
        var expected = outHeader
                + setupHeader
                + gameHeader
                + gameLoop("printf(\"%s\\n\", \"Hello, World!\");\n")
                + "return 0;\n}\n";

        var sb = new StringBuilder();
        InputStream inputStream = new ByteArrayInputStream(input.getBytes(StandardCharsets.UTF_8));
        Griddy.main(Target.C, false, inputStream, sb);

        assertEquals(expected, sb.toString());
    }

    @Test
    void outputNumber() {
        var input = """
                SETUP
                GAME
                    output 42;
                """;
        var expected = outHeader
                + setupHeader
                + gameHeader
                + gameLoop("printf(\"%d\\n\", 42);\n")
                + "return 0;\n}\n";

        var sb = new StringBuilder();
        InputStream inputStream = new ByteArrayInputStream(input.getBytes(StandardCharsets.UTF_8));
        Griddy.main(Target.C, false, inputStream, sb);

        assertEquals(expected, sb.toString());
    }

    @Test
    void outputBoolean() {
        var input = """
                SETUP
                GAME
                    output true;
                """;
        var expected = outHeader
                + setupHeader
                + gameHeader
                + gameLoop("printf(\"%d\\n\", 1);\n")
                + "return 0;\n}\n";

        var sb = new StringBuilder();
        InputStream inputStream = new ByteArrayInputStream(input.getBytes(StandardCharsets.UTF_8));
        Griddy.main(Target.C, false, inputStream, sb);

        assertEquals(expected, sb.toString());
    }
}