# tic_tac_toe.griddy
board (3,3);

piece XO end

fun check_win ()
    win_cond = false;

    if !empty? (2,2) and (
            tile (1,1) == tile (2,2) and tile (3,3) == tile (2,2) or
            tile (2,1) == tile (2,2) and tile (2,3) == tile (2,2) or
            tile (3,1) == tile (2,2) and tile (1,3) == tile (2,2) or
            tile (1,2) == tile (2,2) and tile (3,1) == tile (2,2) ) or
        (!empty? (2,1) and ( tile (1,1) == tile (2,1) and tile (3,1) == tile (2,1) )) or
        (!empty? (1,2) and ( tile (1,1) == tile (1,2) and tile (1,3) == tile (1,1) )) or
        (!empty? (3,2) and ( tile (3,1) == tile (3,2) and tile (3,3) == tile (3,2) )) or
        (!empty? (2,3) and( tile (1,3) == tile (2,3) and tile (3,3) == tile (2,3) )) or
        !empty? (1,1) and !empty? (2,1) and !empty? (3,1) and
        !empty? (1,2) and !empty? (2,2) and !empty? (3,2) and
        !empty? (1,3) and !empty? (2,3) and !empty? (3,3)
        win_cond = true;
    end

    if win_cond
        output @board;

        if (!empty? (1,1) and !empty? (2,1) and !empty? (3,1) and
            !empty? (1,2) and !empty? (2,2) and !empty? (3,2) and
            !empty? (1,3) and !empty? (2,3) and !empty? (3,3))
            output "No Winner";
        else if @current_player == @player_one
            output "Winner: Player 1";
        else
            output "Winner: Player 2";
        end
    end
return win_cond

fun turn ()
    output @board;
    if @current_player == @player_one
        output "It is Player 1's turn";
    else
        output "It is Player 2's turn";
    end
    place XO;

return 0

GAME (check_win())
    turn();